critical section (J040)

import threading
import time

class CriticalSection():
    def __init__(self):
        self.sem = threading.Semaphore()

    def process1(self):
        while True:
            print("Entry section 1")
            self.sem.acqire()
            self.criticalsection()
            self.sem.release()
            print("Critical section over process 1")
            time.sleep(3)

    def process2():
        while True:
            print("Entry Section 2")
            self.sem.acquire()
            self.criticalsection()
            self.sem.release()
            print("Critical section over process 2")
            time.sleep(3)

    def criticalsection(self):
        print("Entered critical section! Perform operation on shared resources")

    def main(self):
        t1 = threading.Thread(target = self.process1)
        t1.start()
        t2 = threading.Thread(target = self.process2)

if __name__ == "__main__":
    c = CriticalSection()
    c.main()
    